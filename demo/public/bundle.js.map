{"version":3,"file":"bundle.js","sources":["../../node_modules/@ctrl/ts-base32/ts-base32.m.js","../../src/index.ts","../src/main.ts"],"sourcesContent":["var RFC4648 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nvar RFC4648_HEX = '0123456789ABCDEFGHIJKLMNOPQRSTUV';\nvar CROCKFORD = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nfunction base32Encode(buffer, variant, options) {\n  if ( variant === void 0 ) variant = 'RFC4648';\n  if ( options === void 0 ) options = {};\n\n  var alphabet;\n  var defaultPadding;\n\n  switch (variant) {\n    case 'RFC3548':\n    case 'RFC4648':\n      alphabet = RFC4648;\n      defaultPadding = true;\n      break;\n\n    case 'RFC4648-HEX':\n      alphabet = RFC4648_HEX;\n      defaultPadding = true;\n      break;\n\n    case 'Crockford':\n      alphabet = CROCKFORD;\n      defaultPadding = false;\n      break;\n\n    default:\n      throw new Error((\"Unknown base32 variant: \" + variant));\n  }\n\n  var padding = options.padding !== undefined ? options.padding : defaultPadding;\n  var length = buffer.byteLength;\n  var view = new Uint8Array(buffer);\n  var bits = 0;\n  var value = 0;\n  var output = '';\n\n  for (var i = 0; i < length; i++) {\n    value = value << 8 | view[i];\n    bits += 8;\n\n    while (bits >= 5) {\n      output += alphabet[value >>> bits - 5 & 31];\n      bits -= 5;\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[value << 5 - bits & 31];\n  }\n\n  if (padding) {\n    while (output.length % 8 !== 0) {\n      output += '=';\n    }\n  }\n\n  return output;\n}\n\nfunction readChar(alphabet, char) {\n  var idx = alphabet.indexOf(char);\n\n  if (idx === -1) {\n    throw new Error('Invalid character found: ' + char);\n  }\n\n  return idx;\n}\n\nfunction base32Decode(input, variant) {\n  if ( variant === void 0 ) variant = 'RFC4648';\n\n  var alphabet;\n  var cleanedInput;\n\n  switch (variant) {\n    case 'RFC3548':\n    case 'RFC4648':\n      alphabet = RFC4648;\n      cleanedInput = input.toUpperCase().replace(/=+$/, '');\n      break;\n\n    case 'RFC4648-HEX':\n      alphabet = RFC4648_HEX;\n      cleanedInput = input.toUpperCase().replace(/=+$/, '');\n      break;\n\n    case 'Crockford':\n      alphabet = CROCKFORD;\n      cleanedInput = input.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1');\n      break;\n\n    default:\n      throw new Error((\"Unknown base32 variant: \" + variant));\n  }\n\n  var length = cleanedInput.length;\n  var bits = 0;\n  var value = 0;\n  var index = 0;\n  var output = new Uint8Array(length * 5 / 8 | 0);\n\n  for (var i = 0; i < length; i++) {\n    value = value << 5 | readChar(alphabet, cleanedInput[i]);\n    bits += 5;\n\n    if (bits >= 8) {\n      output[index++] = value >>> bits - 8 & 255;\n      bits -= 8;\n    }\n  }\n\n  return output.buffer;\n}\n/**\r\n * Turn a string of hexadecimal characters into an ArrayBuffer\r\n */\n\nfunction hexToArrayBuffer(hex) {\n  if (hex.length % 2 !== 0) {\n    throw new RangeError('Expected string to be an even number of characters');\n  }\n\n  var view = new Uint8Array(hex.length / 2);\n\n  for (var i = 0; i < hex.length; i += 2) {\n    view[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n  }\n\n  return view.buffer;\n}\n\nexport { base32Encode, base32Decode, hexToArrayBuffer };\n//# sourceMappingURL=ts-base32.m.js.map\n","import { base32Decode } from '@ctrl/ts-base32';\n\nexport interface MagnetData {\n  /**\n   * Is the info-hash hex encoded, for a total of 40 characters. For compatability with existing links in the wild, clients should also support the 32 character base32 encoded info-hash.\n   *\n   * *or*\n   *\n   * Is the multihash formatted, hex encoded full infohash for torrents in the new metadata format. 'btmh' and 'btih' exact topics may exist in the same magnet if they describe the same hybrid torrent.\n   * @link http://www.bittorrent.org/beps/bep_0009.html\n   */\n  xt: string | string[];\n  /**\n   * parsed xt= parameter see xt\n   */\n  infoHash?: string;\n  /**\n   * the display name that may be used by the client to display while waiting for metadata\n   */\n  name?: string | string[];\n  /**\n   * the display name that may be used by the client to display while waiting for metadata\n   */\n  dn?: string | string[];\n  /**\n   * tracker url, if there is one. If there are multiple trackers, multiple tr entries may be included\n   */\n  tr?: string | string[];\n  /**\n   * tracker url, if there is one. If there are multiple trackers, multiple tr entries may be included\n   */\n  announce?: string[];\n  /**\n   * an array of where the actual torrent file can be downloaded\n   */\n  xs?: string | string[];\n  /**\n   * an array of where the actual torrent file can be downloaded\n   */\n  as?: string | string[];\n  /**\n   * an array of where the actual torrent file can be downloaded\n   */\n  ws?: string | string[];\n  /**\n   * \"keyword topic\": a more general search, specifying search terms rather than a particular file\n   */\n  kt?: string[];\n  /**\n   * \"keyword topic\": a more general search, specifying search terms rather than a particular file\n   */\n  keywords?: string | string[];\n  /**\n   * file index\n   */\n  ix?: number | number[];\n  /**\n   * size in bytes\n   */\n  xl?: string;\n  /**\n   * combined as= and ws= parameters if they exist\n   */\n  urlList?: string[];\n}\n\nconst start = 'magnet:?';\n\nexport function magnetDecode(uri: string): MagnetData {\n  // support 'stream-magnet:' as well\n  const data = uri.substr(uri.indexOf(start) + start.length);\n\n  const params = data && data.length >= 0 ? data.split('&') : [];\n\n\n  const result: any = {};\n  params.forEach(param => {\n    const keyval = param.split('=');\n\n    // This keyval is invalid, skip it\n    if (keyval.length !== 2) {\n      return;\n    }\n\n    const key = keyval[0];\n    let val: any = keyval[1];\n\n    // Clean up torrent name\n    if (key === 'dn') {\n      val = decodeURIComponent(val).replace(/\\+/g, ' ');\n    }\n\n    // Address tracker (tr), exact source (xs), and acceptable source (as) are encoded\n    // URIs, so decode them\n    if (key === 'tr' || key === 'xs' || key === 'as' || key === 'ws') {\n      val = decodeURIComponent(val);\n    }\n\n    // Return keywords as an array\n    if (key === 'kt') {\n      val = decodeURIComponent(val).split('+');\n    }\n\n    // Cast file index (ix) to a number\n    if (key === 'ix') {\n      val = Number(val);\n    }\n\n    // If there are repeated parameters, return an array of values\n    if (!result[key]) {\n      return result[key] = val;\n\n    }\n    if (Array.isArray(result[key])) {\n      return result[key].push(val);\n    }\n    const old = result[key];\n    result[key] = [old, val];\n  });\n\n  if (result.xt) {\n    let m;\n    const xts = Array.isArray(result.xt) ? result.xt : [result.xt];\n    xts.forEach(xt => {\n      // tslint:disable-next-line:no-conditional-assignment\n      if ((m = xt.match(/^urn:btih:(.{40})/))) {\n        result.infoHash = m[1].toLowerCase();\n        // tslint:disable-next-line:no-conditional-assignment\n      } else if ((m = xt.match(/^urn:btih:(.{32})/))) {\n        const decodedStr = base32Decode(m[1]);\n        result.infoHash = Buffer.from(decodedStr).toString('hex');\n      }\n    });\n  }\n\n  if (result.dn) {\n    result.name = result.dn;\n  }\n  if (result.kt) {\n    result.keywords = result.kt;\n  }\n\n  if (typeof result.tr === 'string') {\n    result.announce = [result.tr];\n  } else if (Array.isArray(result.tr)) {\n    result.announce = result.tr;\n  } else {\n    result.announce = [];\n  }\n\n  result.urlList = [];\n  if (typeof result.as === 'string' || Array.isArray(result.as)) {\n    result.urlList = result.urlList.concat(result.as);\n  }\n  if (typeof result.ws === 'string' || Array.isArray(result.ws)) {\n    result.urlList = result.urlList.concat(result.ws);\n  }\n\n  result.announce = [...new Set(result.announce)].sort();\n  result.urlList = [...new Set(result.urlList)].sort();\n\n  return result;\n}\n\nexport function magnetEncode(data: MagnetData): string {\n  const obj: any = { ...data }; // shallow clone object\n\n  // Support using convenience names, in addition to spec names\n  // (example: `infoHash` for `xt`, `name` for `dn`)\n  if (obj.infoHash) {\n    obj.xt = `urn:btih:${obj.infoHash}`;\n  }\n  if (obj.name) {\n    obj.dn = obj.name;\n  }\n  if (obj.keywords) {\n    obj.kt = obj.keywords;\n  }\n  if (obj.announce) {\n    obj.tr = obj.announce;\n  }\n  if (obj.urlList) {\n    obj.ws = obj.urlList;\n    delete obj.as;\n  }\n\n  return Object.keys(obj)\n    .filter(key => key.length === 2)\n    .reduce((prev, key, i) => {\n      let acc = prev;\n\n      const values = Array.isArray(obj[key]) ? obj[key] : [obj[key]];\n      values.forEach((val, j) => {\n        if ((i > 0 || j > 0) && (key !== 'kt' || j === 0)) {\n          acc = `${acc}&`;\n        }\n\n        let res = val;\n        if (key === 'dn') {\n          res = encodeURIComponent(val).replace(/%20/g, '+');\n        }\n        if (key === 'tr' || key === 'xs' || key === 'as' || key === 'ws') {\n          res = encodeURIComponent(val);\n        }\n        if (key === 'kt') {\n          res = encodeURIComponent(val);\n        }\n\n        if (key === 'kt' && j > 0) {\n          acc = `${acc}+${res}`;\n        } else {\n          acc = `${acc}${key}=${res}`;\n        }\n      });\n      return acc;\n    }, `${start}`);\n}\n","// tslint:disable-next-line:no-unused\nimport { Buffer } from 'buffer';\nimport { magnetDecode, magnetEncode } from '../../src';\n\n(window as any).magnetDecode = magnetDecode;\n(window as any).magnetEncode = magnetEncode;\n\nconst input = document.querySelector<HTMLInputElement>('#input');\nconst output = document.querySelector<HTMLInputElement>('#output');\n\ninput.addEventListener('input', event => inputChange((event.target as HTMLInputElement).value));\noutput.addEventListener('input', event => outputChange((event.target as HTMLInputElement).value));\n\nfunction inputChange(str: string) {\n  output.value = JSON.stringify(magnetDecode(str), null, 4);\n}\n\nfunction outputChange(str: string) {\n  input.value =  magnetEncode(JSON.parse(str));\n}\n\n"],"names":["tslib_1.__spread"],"mappings":"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"}